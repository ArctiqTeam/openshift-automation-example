apiVersion: argoproj.io/v1alpha1
kind: ArgoCD
metadata:
  name: openshift-gitops
  namespace: openshift-gitops
spec:
  configManagementPlugins: |
    - name: ocpConfig
      generate:
        command: [sh, -c]
        args: ["export CLUSTER_NAME=$(kubectl get -o jsonpath='{.status.infrastructureName}' infrastructure cluster) && export CLUSTER_VERSION=$(kubectl get -o jsonpath='{.spec.channel}' clusterversion version | cut -d '-' -f2) && kubectl get machineset -n openshift-machine-api -o yaml > machineset.yaml && helm template . -f machineset.yaml --set runningClusterName=$CLUSTER_NAME --set clusterVersion=$CLUSTER_VERSION"]
    - name: argocd-vault-plugin
      generate:
        command: ["argocd-vault-plugin"]
        args: ["generate", "./"]
    - name: argocd-vault-plugin-helm
      init:
        command: [sh, -c]
        args: ["helm dependency build"]
      generate:
        command: ["sh", "-c"]
        args: ["helm template $ARGOCD_APP_NAME ${helm_args} . --include-crds | argocd-vault-plugin generate -"]
  applicationSet:
    resources:
      limits:
        cpu: "2"
        memory: 1Gi
      requests:
        cpu: 250m
        memory: 512Mi
  controller:
    resources:
      limits:
        cpu: "2"
        memory: 2Gi
      requests:
        cpu: 250m
        memory: 1Gi
  dex:
    openShiftOAuth: true
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi
  grafana:
    enabled: false
    ingress:
      enabled: false
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi
    route:
      enabled: false
  ha:
    enabled: false
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi
  prometheus:
    enabled: false
    ingress:
      enabled: false
    route:
      enabled: false
  rbac:
    policy: |
      g, system:cluster-admins, role:admin
      g, cluster-admins, role:admin
    scopes: '[groups]'
  redis:
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi
  repo:
    env:
    - name: AVP_TYPE
      value: gcpsecretmanager
    - name: GOOGLE_APPLICATION_CREDENTIALS
      value: /var/run/secret/cloud.google.com/osServiceAccount.json
    initContainers:
    - args:
      - curl -Lo /custom-tools/kubectl https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl && curl -Lo /custom-tools/argocd-vault-plugin $(curl -s https://api.github.com/repos/argoproj-labs/argocd-vault-plugin/releases/latest | grep browser_download_url | grep linux_amd64 | cut -d '"' -f 4) && chmod +x /custom-tools/*
      command:
      - sh
      - -c
      image: curlimages/curl
      name: download-tools
      volumeMounts:
      - mountPath: /custom-tools
        name: custom-tools
    mountsatoken: true
    serviceaccount: openshift-gitops-argocd-application-controller
    volumeMounts:
    - name: gcp-creds
      mountPath: "/var/run/secret/cloud.google.com"
    - mountPath: /usr/local/bin/kubectl
      name: custom-tools
      subPath: kubectl
    - mountPath: /usr/local/bin/argocd-vault-plugin
      name: custom-tools
      subPath: argocd-vault-plugin
    volumes:
    - name: gcp-creds
      secret:
        secretName: "gcp-creds"
    - emptyDir: {}
      name: custom-tools
    resources:
      limits:
        cpu: "1"
        memory: 1Gi
      requests:
        cpu: 250m
        memory: 256Mi
  resourceExclusions: |
    - apiGroups:
      - tekton.dev
      clusters:
      - '*'
      kinds:
      - TaskRun
      - PipelineRun
  server:
    autoscale:
      enabled: false
    grpc:
      ingress:
        enabled: false
    ingress:
      enabled: false
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 125m
        memory: 128Mi
    route:
      enabled: true
    service:
      type: ""
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: gitops-operator-cluster-admin-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: openshift-gitops-argocd-application-controller 
  namespace: openshift-gitops
